import i18n from "i18next";
import LanguageDetector from "i18next-browser-languagedetector";
import { initReactI18next } from "react-i18next";

import type { Resource } from "i18next";

// eslint-disable-next-line @typescript-eslint/no-explicit-any
const modules: Record<string, { default: any }> = import.meta.glob("./assets/languages/*/*.ts", {
  eager: true,
});

const namespaces = ["global"];

const loadTranslations = () => {
  const resources: Resource = {};

  for (const path in modules) {
    const match = path.match(/\.\/assets\/languages\/(.*?)\/(.*?)\.(ts|json)$/);
    if (!match) continue;

    const [, lang, ns] = match;
    if (!resources[lang]) resources[lang] = {};

    resources[lang][ns] = modules[path].default;
  }
  return resources;
};

i18n
  .use(LanguageDetector)
  .use(initReactI18next)
  .init({
    resources: loadTranslations(),
    fallbackLng: "fr",
    ns: namespaces,
    defaultNS: "global",
    keySeparator: false,
    interpolation: {
      escapeValue: false,
    },
    detection: {
      lookupLocalStorage: "i18nextLng",
      order: ["localStorage"],
      caches: ["localStorage"],
    },
  });

export default i18n;